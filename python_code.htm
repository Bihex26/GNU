<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="utf-8">
<title>/gr-wxgui/src/python/fftsink2.py - GNU Radio - gnuradio.org</title>
<meta name="description" content="Redmine">
<meta name="keywords" content="issue,bug,tracker">
<meta content="authenticity_token" name="csrf-param">
<meta content="nQ8dj+EJp7cvG0xfj3/lRVJy/ybRivEwDHRtcWM/sHY=" name="csrf-token">
<script type="text/javascript" async="" src="python_code_files/ga.js"></script><script type="text/javascript">
//<![CDATA[
try{if (!window.CloudFlare) {var CloudFlare=[{verbose:0,p:0,byc:0,owlid:"cf",bag2:1,mirage2:0,oracle:0,paths:{cloudflare:"/cdn-cgi/nexp/dok3v=1613a3a185/"},atok:"c5bd2d843b5b24de7d0893da9ada4f70",petok:"cc9ad95cc735261ef52b67b529d08237cfcf1154-1472628627-1800",zone:"gnuradio.org",rocket:"m",apps:{"ga_key":{"ua":"UA-40259801-1","ga_bs":"2"}},sha2test:0}];document.write('<script type="text/javascript" src="//ajax.cloudflare.com/cdn-cgi/nexp/dok3v=0489c402f5/cloudflare.min.js"><'+'\/script>');}}catch(e){};
//]]>
</script><script type="text/javascript" src="python_code_files/cloudflare.js"></script><style type="text/css">.cf-hidden { display: none; } .cf-invisible { visibility: hidden; }</style><script data-module="cloudflare/rocket" id="cfjs_block_89a5351aee" onload="CloudFlare.__cfjs_block_89a5351aee_load()" onerror="CloudFlare.__cfjs_block_89a5351aee_error()" onreadystatechange="CloudFlare.__cfjs_block_89a5351aee_readystatechange()" type="text/javascript" src="python_code_files/rocket.js"></script>
<link rel="shortcut icon" href="http://gnuradio.org/redmine/favicon.ico?1387561505">
<link href="python_code_files/jquery-ui-1.css" media="all" rel="stylesheet" type="text/css">
<link href="python_code_files/application.css" media="all" rel="stylesheet" type="text/css">
<script src="python_code_files/jquery-1.js" type="text/javascript"></script>
<script src="python_code_files/application.js" type="text/javascript"></script>
<script type="text/javascript">
//<![CDATA[
$(window).load(function(){ warnLeavingUnsaved('The current page contains unsaved text that will be lost if you leave this page.'); });
//]]>
</script>
 
<script src="python_code_files/repository_navigation.js" type="text/javascript"></script>
<link href="python_code_files/scm.css" media="screen" rel="stylesheet" type="text/css">
<script type="text/javascript">
/* <![CDATA[ */
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-40259801-1']);
_gaq.push(['_trackPageview']);

(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();

(function(b){(function(a){"__CF"in b&&"DJS"in b.__CF?b.__CF.DJS.push(a):"addEventListener"in b?b.addEventListener("load",a,!1):b.attachEvent("onload",a)})(function(){"FB"in b&&"Event"in FB&&"subscribe"in FB.Event&&(FB.Event.subscribe("edge.create",function(a){_gaq.push(["_trackSocial","facebook","like",a])}),FB.Event.subscribe("edge.remove",function(a){_gaq.push(["_trackSocial","facebook","unlike",a])}),FB.Event.subscribe("message.send",function(a){_gaq.push(["_trackSocial","facebook","send",a])}));"twttr"in b&&"events"in twttr&&"bind"in twttr.events&&twttr.events.bind("tweet",function(a){if(a){var b;if(a.target&&a.target.nodeName=="IFRAME")a:{if(a=a.target.src){a=a.split("#")[0].match(/[^?=&]+=([^&]*)?/g);b=0;for(var c;c=a[b];++b)if(c.indexOf("url")===0){b=unescape(c.split("=")[1]);break a}}b=void 0}_gaq.push(["_trackSocial","twitter","tweet",b])}})})})(window);
/* ]]> */
</script>
</head>
<body class="theme-Gnuradio controller-repositories action-entry">
<div id="wrapper">
<div id="wrapper2">
<div id="wrapper3">
<div id="top-menu">
<div id="account">
<ul><li><a href="http://gnuradio.org/redmine/login" class="login">Sign in</a></li>
<li><a href="http://gnuradio.org/redmine/account/register" class="register">Register</a></li></ul> </div>
<ul><li><a href="http://gnuradio.org/redmine/" class="home">Home</a></li>
<li><a href="http://gnuradio.org/redmine/projects" class="projects">Projects</a></li>
<li><a href="http://www.redmine.org/guide" class="help">Help</a></li></ul></div>
<div id="header">
<div id="quick-search">
<form accept-charset="UTF-8" action="/redmine/projects/gnuradio/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" value="✓" type="hidden"></div>
<input name="changesets" value="1" type="hidden">
<label for="q">
<a href="http://gnuradio.org/redmine/projects/gnuradio/search" accesskey="4">Search</a>:
</label>
<input accesskey="f" class="small" id="q" name="q" size="20" type="text">
</form>
</div>
 
<img src="python_code_files/gnuradio-logo.png" height="70">
<div id="main-menu">
<ul><li><a href="http://gnuradio.org/redmine/projects/gnuradio" class="overview">Overview</a></li>
<li><a href="http://gnuradio.org/redmine/projects/gnuradio/activity" class="activity">Activity</a></li>
<li><a href="http://gnuradio.org/redmine/projects/gnuradio/roadmap" class="roadmap">Roadmap</a></li>
<li><a href="http://gnuradio.org/redmine/projects/gnuradio/issues" class="issues">Issues</a></li>
<li><a href="http://gnuradio.org/redmine/projects/gnuradio/news" class="news">News</a></li>
<li><a href="http://gnuradio.org/redmine/projects/gnuradio/wiki" class="wiki">Wiki</a></li>
<li><a href="http://gnuradio.org/redmine/projects/gnuradio/files" class="files">Files</a></li>
<li><a href="http://gnuradio.org/redmine/projects/gnuradio/repository" class="repository selected">Repository</a></li></ul>
</div>
</div>
<div id="main" class="nosidebar">
<div id="sidebar">
</div>
<div id="content">
<div class="contextual">
<a href="http://gnuradio.org/redmine/projects/gnuradio/repository/statistics" class="icon icon-stats">Statistics</a>
<form accept-charset="UTF-8" action="/redmine/projects/gnuradio/repository/entry/gr-wxgui/src/python/fftsink2.py" id="revision_selector" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" value="✓" type="hidden"></div>  
| Branch:
<select id="branch" name="branch"><option value="" selected="selected"></option>
<option value="android">android</option>
<option value="maint">maint</option>
<option value="master">master</option>
<option value="next">next</option></select>
| Tag:
<select id="tag" name="tag"><option value="" selected="selected"></option>
<option value="3.3git">3.3git</option>
<option value="3.5.1git">3.5.1git</option>
<option value="3.5.2git">3.5.2git</option>
<option value="3.5git">3.5git</option>
<option value="3.6.0git">3.6.0git</option>
<option value="3.6.1git">3.6.1git</option>
<option value="3.6.2git">3.6.2git</option>
<option value="3.6.3git">3.6.3git</option>
<option value="3.6git">3.6git</option>
<option value="3.7.0git">3.7.0git</option>
<option value="3.7.10git">3.7.10git</option>
<option value="3.7.2git">3.7.2git</option>
<option value="3.7.3git">3.7.3git</option>
<option value="3.7.5git">3.7.5git</option>
<option value="3.7.6git">3.7.6git</option>
<option value="3.7.7git">3.7.7git</option>
<option value="3.7.8git">3.7.8git</option>
<option value="3.7.9git">3.7.9git</option>
<option value="3.7git">3.7git</option>
<option value="maint-3.3.0">maint-3.3.0</option>
<option value="maint-3.4.0">maint-3.4.0</option>
<option value="maint-3.4.1">maint-3.4.1</option>
<option value="maint-3.4.2">maint-3.4.2</option>
<option value="maint-3.5.1">maint-3.5.1</option>
<option value="maint-3.5.2">maint-3.5.2</option>
<option value="maint-3.5.3">maint-3.5.3</option>
<option value="maint-3.6.0">maint-3.6.0</option>
<option value="maint-3.6.1">maint-3.6.1</option>
<option value="maint-3.6.2">maint-3.6.2</option>
<option value="v3.3.0">v3.3.0</option>
<option value="v3.3.0-rc0">v3.3.0-rc0</option>
<option value="v3.3.0-rc1">v3.3.0-rc1</option>
<option value="v3.3.0-rc2">v3.3.0-rc2</option>
<option value="v3.3.0-rc3">v3.3.0-rc3</option>
<option value="v3.3.1">v3.3.1</option>
<option value="v3.3.1git">v3.3.1git</option>
<option value="v3.4.0">v3.4.0</option>
<option value="v3.4.0git">v3.4.0git</option>
<option value="v3.4.1">v3.4.1</option>
<option value="v3.4.1git">v3.4.1git</option>
<option value="v3.4.2">v3.4.2</option>
<option value="v3.4.2git">v3.4.2git</option>
<option value="v3.4git">v3.4git</option>
<option value="v3.5.0">v3.5.0</option>
<option value="v3.5.0git">v3.5.0git</option>
<option value="v3.5.0rc0">v3.5.0rc0</option>
<option value="v3.5.1">v3.5.1</option>
<option value="v3.5.2">v3.5.2</option>
<option value="v3.5.2.1">v3.5.2.1</option>
<option value="v3.5.3">v3.5.3</option>
<option value="v3.5.3.1">v3.5.3.1</option>
<option value="v3.5.3.2">v3.5.3.2</option>
<option value="v3.5.3git">v3.5.3git</option>
<option value="v3.6.0">v3.6.0</option>
<option value="v3.6.1">v3.6.1</option>
<option value="v3.6.2">v3.6.2</option>
<option value="v3.6.3">v3.6.3</option>
<option value="v3.6.3.1">v3.6.3.1</option>
<option value="v3.6.3rc0">v3.6.3rc0</option>
<option value="v3.6.4">v3.6.4</option>
<option value="v3.6.4.1">v3.6.4.1</option>
<option value="v3.6.4.2">v3.6.4.2</option>
<option value="v3.6.4git">v3.6.4git</option>
<option value="v3.6.5">v3.6.5</option>
<option value="v3.6.5.1">v3.6.5.1</option>
<option value="v3.7.0">v3.7.0</option>
<option value="v3.7.0.1">v3.7.0.1</option>
<option value="v3.7.0rc0">v3.7.0rc0</option>
<option value="v3.7.1">v3.7.1</option>
<option value="v3.7.1.1">v3.7.1.1</option>
<option value="v3.7.10">v3.7.10</option>
<option value="v3.7.10.1">v3.7.10.1</option>
<option value="v3.7.2">v3.7.2</option>
<option value="v3.7.2.1">v3.7.2.1</option>
<option value="v3.7.2.2">v3.7.2.2</option>
<option value="v3.7.3">v3.7.3</option>
<option value="v3.7.4">v3.7.4</option>
<option value="v3.7.4.1">v3.7.4.1</option>
<option value="v3.7.4git">v3.7.4git</option>
<option value="v3.7.5">v3.7.5</option>
<option value="v3.7.5.1">v3.7.5.1</option>
<option value="v3.7.5.2">v3.7.5.2</option>
<option value="v3.7.6">v3.7.6</option>
<option value="v3.7.6.1">v3.7.6.1</option>
<option value="v3.7.6.2">v3.7.6.2</option>
<option value="v3.7.7">v3.7.7</option>
<option value="v3.7.7.1">v3.7.7.1</option>
<option value="v3.7.7.2">v3.7.7.2</option>
<option value="v3.7.8">v3.7.8</option>
<option value="v3.7.8.1">v3.7.8.1</option>
<option value="v3.7.8.2">v3.7.8.2</option>
<option value="v3.7.8rc1">v3.7.8rc1</option>
<option value="v3.7.9">v3.7.9</option>
<option value="v3.7.9.1">v3.7.9.1</option>
<option value="v3.7.9.2">v3.7.9.2</option>
<option value="v3.7.9.3">v3.7.9.3</option>
<option value="v3.7.9rc1">v3.7.9rc1</option></select>
| Revision:
<input id="rev" name="rev" size="8" value="28edd49f3d5c1e7eb2f3f2826726bf688f037b1f" type="text">
</form>
</div>
<h2><a href="http://gnuradio.org/redmine/projects/gnuradio/repository/revisions/28edd49f3d5c1e7eb2f3f2826726bf688f037b1f/show">gnuradio</a>
/ <a href="http://gnuradio.org/redmine/projects/gnuradio/repository/revisions/28edd49f3d5c1e7eb2f3f2826726bf688f037b1f/show/gr-wxgui">gr-wxgui</a>
/ <a href="http://gnuradio.org/redmine/projects/gnuradio/repository/revisions/28edd49f3d5c1e7eb2f3f2826726bf688f037b1f/show/gr-wxgui/src">src</a>
/ <a href="http://gnuradio.org/redmine/projects/gnuradio/repository/revisions/28edd49f3d5c1e7eb2f3f2826726bf688f037b1f/show/gr-wxgui/src/python">python</a>
/ <a href="http://gnuradio.org/redmine/projects/gnuradio/repository/changes/gr-wxgui/src/python/fftsink2.py?rev=28edd49f3d5c1e7eb2f3f2826726bf688f037b1f">fftsink2.py</a>
@ 28edd49f
</h2>
<p>
<a href="http://gnuradio.org/redmine/projects/gnuradio/repository/changes/gr-wxgui/src/python/fftsink2.py?rev=28edd49f3d5c1e7eb2f3f2826726bf688f037b1f">History</a> |
View |
<a href="http://gnuradio.org/redmine/projects/gnuradio/repository/revisions/28edd49f3d5c1e7eb2f3f2826726bf688f037b1f/annotate/gr-wxgui/src/python/fftsink2.py">Annotate</a> |
<a href="http://gnuradio.org/redmine/projects/gnuradio/repository/revisions/28edd49f3d5c1e7eb2f3f2826726bf688f037b1f/raw/gr-wxgui/src/python/fftsink2.py">Download</a>
(18.6 KB)
</p>
<div class="autoscroll">
<table class="filecontent syntaxhl">
<tbody>
<tr>
<th class="line-num" id="L1">
<a href="#L1">1</a>
</th>
<td class="line-code">
<pre><span class="comment">#!/usr/bin/env python</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L2">
<a href="#L2">2</a>
</th>
<td class="line-code">
<pre><span class="comment">#</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L3">
<a href="#L3">3</a>
</th>
<td class="line-code">
<pre><span class="comment"># Copyright 2003,2004,2005,2006,2007 Free Software Foundation, Inc.</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L4">
<a href="#L4">4</a>
</th>
<td class="line-code">
<pre><span class="comment"># </span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L5">
<a href="#L5">5</a>
</th>
<td class="line-code">
<pre><span class="comment"># This file is part of GNU Radio</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L6">
<a href="#L6">6</a>
</th>
<td class="line-code">
<pre><span class="comment"># </span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L7">
<a href="#L7">7</a>
</th>
<td class="line-code">
<pre><span class="comment"># GNU Radio is free software; you can redistribute it and/or modify</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L8">
<a href="#L8">8</a>
</th>
<td class="line-code">
<pre><span class="comment"># it under the terms of the GNU General Public License as published by</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L9">
<a href="#L9">9</a>
</th>
<td class="line-code">
<pre><span class="comment"># the Free Software Foundation; either version 3, or (at your option)</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L10">
<a href="#L10">10</a>
</th>
<td class="line-code">
<pre><span class="comment"># any later version.</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L11">
<a href="#L11">11</a>
</th>
<td class="line-code">
<pre><span class="comment"># </span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L12">
<a href="#L12">12</a>
</th>
<td class="line-code">
<pre><span class="comment"># GNU Radio is distributed in the hope that it will be useful,</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L13">
<a href="#L13">13</a>
</th>
<td class="line-code">
<pre><span class="comment"># but WITHOUT ANY WARRANTY; without even the implied warranty of</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L14">
<a href="#L14">14</a>
</th>
<td class="line-code">
<pre><span class="comment"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L15">
<a href="#L15">15</a>
</th>
<td class="line-code">
<pre><span class="comment"># GNU General Public License for more details.</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L16">
<a href="#L16">16</a>
</th>
<td class="line-code">
<pre><span class="comment"># </span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L17">
<a href="#L17">17</a>
</th>
<td class="line-code">
<pre><span class="comment"># You should have received a copy of the GNU General Public License</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L18">
<a href="#L18">18</a>
</th>
<td class="line-code">
<pre><span class="comment"># along with GNU Radio; see the file COPYING.  If not, write to</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L19">
<a href="#L19">19</a>
</th>
<td class="line-code">
<pre><span class="comment"># the Free Software Foundation, Inc., 51 Franklin Street,</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L20">
<a href="#L20">20</a>
</th>
<td class="line-code">
<pre><span class="comment"># Boston, MA 02110-1301, USA.</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L21">
<a href="#L21">21</a>
</th>
<td class="line-code">
<pre><span class="comment"># </span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L22">
<a href="#L22">22</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L23">
<a href="#L23">23</a>
</th>
<td class="line-code">
<pre><span class="keyword">from</span> <span class="include">gnuradio</span> <span class="keyword">import</span> <span class="include">gr</span>, <span class="include">gru</span>, <span class="include">window</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L24">
<a href="#L24">24</a>
</th>
<td class="line-code">
<pre><span class="keyword">from</span> <span class="include">gnuradio.wxgui</span> <span class="keyword">import</span> <span class="include">stdgui2</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L25">
<a href="#L25">25</a>
</th>
<td class="line-code">
<pre><span class="keyword">import</span> <span class="include">wx</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L26">
<a href="#L26">26</a>
</th>
<td class="line-code">
<pre><span class="keyword">import</span> <span class="include">gnuradio.wxgui.plot</span> <span class="keyword">as</span> plot
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L27">
<a href="#L27">27</a>
</th>
<td class="line-code">
<pre><span class="keyword">import</span> <span class="include">numpy</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L28">
<a href="#L28">28</a>
</th>
<td class="line-code">
<pre><span class="keyword">import</span> <span class="include">threading</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L29">
<a href="#L29">29</a>
</th>
<td class="line-code">
<pre><span class="keyword">import</span> <span class="include">math</span>    
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L30">
<a href="#L30">30</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L31">
<a href="#L31">31</a>
</th>
<td class="line-code">
<pre>default_fftsink_size = (<span class="integer">640</span>,<span class="integer">240</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L32">
<a href="#L32">32</a>
</th>
<td class="line-code">
<pre>default_fft_rate = gr.prefs().get_long(<span class="string"><span class="delimiter">'</span><span class="content">wxgui</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">fft_rate</span><span class="delimiter">'</span></span>, <span class="integer">15</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L33">
<a href="#L33">33</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L34">
<a href="#L34">34</a>
</th>
<td class="line-code">
<pre><span class="keyword">class</span> <span class="class">fft_sink_base</span>(<span class="predefined">object</span>):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L35">
<a href="#L35">35</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">__init__</span>(<span class="predefined-constant">self</span>, input_is_real=<span class="predefined-constant">False</span>, baseband_freq=<span class="integer">0</span>, y_per_div=<span class="integer">10</span>, ref_level=<span class="integer">50</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L36">
<a href="#L36">36</a>
</th>
<td class="line-code">
<pre>                 sample_rate=<span class="integer">1</span>, fft_size=<span class="integer">512</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L37">
<a href="#L37">37</a>
</th>
<td class="line-code">
<pre>                 fft_rate=default_fft_rate,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L38">
<a href="#L38">38</a>
</th>
<td class="line-code">
<pre>                 average=<span class="predefined-constant">False</span>, avg_alpha=<span class="predefined-constant">None</span>, title=<span class="string"><span class="delimiter">'</span><span class="delimiter">'</span></span>, peak_hold=<span class="predefined-constant">False</span>):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L39">
<a href="#L39">39</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L40">
<a href="#L40">40</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># initialize common attributes</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L41">
<a href="#L41">41</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.baseband_freq = baseband_freq
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L42">
<a href="#L42">42</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.y_divs = <span class="integer">8</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L43">
<a href="#L43">43</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.y_per_div=y_per_div
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L44">
<a href="#L44">44</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.ref_level = ref_level
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L45">
<a href="#L45">45</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.sample_rate = sample_rate
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L46">
<a href="#L46">46</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fft_size = fft_size
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L47">
<a href="#L47">47</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fft_rate = fft_rate
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L48">
<a href="#L48">48</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.average = average
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L49">
<a href="#L49">49</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">if</span> avg_alpha <span class="keyword">is</span> <span class="predefined-constant">None</span>:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L50">
<a href="#L50">50</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.avg_alpha = <span class="float">2.0</span> / fft_rate
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L51">
<a href="#L51">51</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">else</span>:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L52">
<a href="#L52">52</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.avg_alpha = avg_alpha
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L53">
<a href="#L53">53</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.title = title
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L54">
<a href="#L54">54</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.peak_hold = peak_hold
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L55">
<a href="#L55">55</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.input_is_real = input_is_real
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L56">
<a href="#L56">56</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.msgq = gr.msg_queue(<span class="integer">2</span>)         <span class="comment"># queue that holds a maximum of 2 messages</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L57">
<a href="#L57">57</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L58">
<a href="#L58">58</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">set_y_per_div</span>(<span class="predefined-constant">self</span>, y_per_div):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L59">
<a href="#L59">59</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.y_per_div = y_per_div
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L60">
<a href="#L60">60</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L61">
<a href="#L61">61</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">set_ref_level</span>(<span class="predefined-constant">self</span>, ref_level):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L62">
<a href="#L62">62</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.ref_level = ref_level
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L63">
<a href="#L63">63</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L64">
<a href="#L64">64</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">set_average</span>(<span class="predefined-constant">self</span>, average):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L65">
<a href="#L65">65</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.average = average
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L66">
<a href="#L66">66</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">if</span> average:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L67">
<a href="#L67">67</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.avg.set_taps(<span class="predefined-constant">self</span>.avg_alpha)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L68">
<a href="#L68">68</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.set_peak_hold(<span class="predefined-constant">False</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L69">
<a href="#L69">69</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">else</span>:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L70">
<a href="#L70">70</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.avg.set_taps(<span class="float">1.0</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L71">
<a href="#L71">71</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L72">
<a href="#L72">72</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">set_peak_hold</span>(<span class="predefined-constant">self</span>, enable):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L73">
<a href="#L73">73</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.peak_hold = enable
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L74">
<a href="#L74">74</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">if</span> enable:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L75">
<a href="#L75">75</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.set_average(<span class="predefined-constant">False</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L76">
<a href="#L76">76</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.win.set_peak_hold(enable)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L77">
<a href="#L77">77</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L78">
<a href="#L78">78</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">set_avg_alpha</span>(<span class="predefined-constant">self</span>, avg_alpha):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L79">
<a href="#L79">79</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.avg_alpha = avg_alpha
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L80">
<a href="#L80">80</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L81">
<a href="#L81">81</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">set_baseband_freq</span>(<span class="predefined-constant">self</span>, baseband_freq):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L82">
<a href="#L82">82</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.baseband_freq = baseband_freq
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L83">
<a href="#L83">83</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L84">
<a href="#L84">84</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">set_sample_rate</span>(<span class="predefined-constant">self</span>, sample_rate):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L85">
<a href="#L85">85</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.sample_rate = sample_rate
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L86">
<a href="#L86">86</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>._set_n()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L87">
<a href="#L87">87</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L88">
<a href="#L88">88</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">_set_n</span>(<span class="predefined-constant">self</span>):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L89">
<a href="#L89">89</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.one_in_n.set_n(<span class="predefined">max</span>(<span class="integer">1</span>, <span class="predefined">int</span>(<span class="predefined-constant">self</span>.sample_rate/<span class="predefined-constant">self</span>.fft_size/<span class="predefined-constant">self</span>.fft_rate)))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L90">
<a href="#L90">90</a>
</th>
<td class="line-code">
<pre>        
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L91">
<a href="#L91">91</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L92">
<a href="#L92">92</a>
</th>
<td class="line-code">
<pre><span class="keyword">class</span> <span class="class">fft_sink_f</span>(gr.hier_block2, fft_sink_base):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L93">
<a href="#L93">93</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">__init__</span>(<span class="predefined-constant">self</span>, parent, baseband_freq=<span class="integer">0</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L94">
<a href="#L94">94</a>
</th>
<td class="line-code">
<pre>                 y_per_div=<span class="integer">10</span>, ref_level=<span class="integer">50</span>, sample_rate=<span class="integer">1</span>, fft_size=<span class="integer">512</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L95">
<a href="#L95">95</a>
</th>
<td class="line-code">
<pre>                 fft_rate=default_fft_rate, average=<span class="predefined-constant">False</span>, avg_alpha=<span class="predefined-constant">None</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L96">
<a href="#L96">96</a>
</th>
<td class="line-code">
<pre>                 title=<span class="string"><span class="delimiter">'</span><span class="delimiter">'</span></span>, size=default_fftsink_size, peak_hold=<span class="predefined-constant">False</span>):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L97">
<a href="#L97">97</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L98">
<a href="#L98">98</a>
</th>
<td class="line-code">
<pre>        gr.hier_block2.__init__(<span class="predefined-constant">self</span>, <span class="string"><span class="delimiter">"</span><span class="content">fft_sink_f</span><span class="delimiter">"</span></span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L99">
<a href="#L99">99</a>
</th>
<td class="line-code">
<pre>                                gr.io_signature(<span class="integer">1</span>, <span class="integer">1</span>, gr.sizeof_float),
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L100">
<a href="#L100">100</a>
</th>
<td class="line-code">
<pre>                                gr.io_signature(<span class="integer">0</span>,<span class="integer">0</span>,<span class="integer">0</span>))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L101">
<a href="#L101">101</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L102">
<a href="#L102">102</a>
</th>
<td class="line-code">
<pre>        fft_sink_base.__init__(<span class="predefined-constant">self</span>, input_is_real=<span class="predefined-constant">True</span>, baseband_freq=baseband_freq,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L103">
<a href="#L103">103</a>
</th>
<td class="line-code">
<pre>                               y_per_div=y_per_div, ref_level=ref_level,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L104">
<a href="#L104">104</a>
</th>
<td class="line-code">
<pre>                               sample_rate=sample_rate, fft_size=fft_size,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L105">
<a href="#L105">105</a>
</th>
<td class="line-code">
<pre>                               fft_rate=fft_rate,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L106">
<a href="#L106">106</a>
</th>
<td class="line-code">
<pre>                               average=average, avg_alpha=avg_alpha, title=title,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L107">
<a href="#L107">107</a>
</th>
<td class="line-code">
<pre>                               peak_hold=peak_hold)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L108">
<a href="#L108">108</a>
</th>
<td class="line-code">
<pre>                               
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L109">
<a href="#L109">109</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.s2p = gr.stream_to_vector(gr.sizeof_float, <span class="predefined-constant">self</span>.fft_size)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L110">
<a href="#L110">110</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.one_in_n = gr.keep_one_in_n(gr.sizeof_float * <span class="predefined-constant">self</span>.fft_size,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L111">
<a href="#L111">111</a>
</th>
<td class="line-code">
<pre>                                         <span class="predefined">max</span>(<span class="integer">1</span>, <span class="predefined">int</span>(<span class="predefined-constant">self</span>.sample_rate/<span class="predefined-constant">self</span>.fft_size/<span class="predefined-constant">self</span>.fft_rate)))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L112">
<a href="#L112">112</a>
</th>
<td class="line-code">
<pre>        
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L113">
<a href="#L113">113</a>
</th>
<td class="line-code">
<pre>        mywindow = window.blackmanharris(<span class="predefined-constant">self</span>.fft_size)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L114">
<a href="#L114">114</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fft = gr.fft_vfc(<span class="predefined-constant">self</span>.fft_size, <span class="predefined-constant">True</span>, mywindow)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L115">
<a href="#L115">115</a>
</th>
<td class="line-code">
<pre>        power = <span class="integer">0</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L116">
<a href="#L116">116</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">for</span> tap <span class="keyword">in</span> mywindow:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L117">
<a href="#L117">117</a>
</th>
<td class="line-code">
<pre>            power += tap*tap
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L118">
<a href="#L118">118</a>
</th>
<td class="line-code">
<pre>            
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L119">
<a href="#L119">119</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.c2mag = gr.complex_to_mag(<span class="predefined-constant">self</span>.fft_size)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L120">
<a href="#L120">120</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.avg = gr.single_pole_iir_filter_ff(<span class="float">1.0</span>, <span class="predefined-constant">self</span>.fft_size)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L121">
<a href="#L121">121</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L122">
<a href="#L122">122</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># FIXME  We need to add 3dB to all bins but the DC bin</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L123">
<a href="#L123">123</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.log = gr.nlog10_ff(<span class="integer">20</span>, <span class="predefined-constant">self</span>.fft_size,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L124">
<a href="#L124">124</a>
</th>
<td class="line-code">
<pre>                               -<span class="integer">20</span>*math.log10(<span class="predefined-constant">self</span>.fft_size)-<span class="integer">10</span>*math.log10(power/<span class="predefined-constant">self</span>.fft_size))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L125">
<a href="#L125">125</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.sink = gr.message_sink(gr.sizeof_float * <span class="predefined-constant">self</span>.fft_size, <span class="predefined-constant">self</span>.msgq, <span class="predefined-constant">True</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L126">
<a href="#L126">126</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.connect(<span class="predefined-constant">self</span>, <span class="predefined-constant">self</span>.s2p, <span class="predefined-constant">self</span>.one_in_n, <span class="predefined-constant">self</span>.fft, <span class="predefined-constant">self</span>.c2mag, <span class="predefined-constant">self</span>.avg, <span class="predefined-constant">self</span>.log, <span class="predefined-constant">self</span>.sink)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L127">
<a href="#L127">127</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L128">
<a href="#L128">128</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.win = fft_window(<span class="predefined-constant">self</span>, parent, size=size)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L129">
<a href="#L129">129</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.set_average(<span class="predefined-constant">self</span>.average)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L130">
<a href="#L130">130</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L131">
<a href="#L131">131</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L132">
<a href="#L132">132</a>
</th>
<td class="line-code">
<pre><span class="keyword">class</span> <span class="class">fft_sink_c</span>(gr.hier_block2, fft_sink_base):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L133">
<a href="#L133">133</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">__init__</span>(<span class="predefined-constant">self</span>, parent, baseband_freq=<span class="integer">0</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L134">
<a href="#L134">134</a>
</th>
<td class="line-code">
<pre>                 y_per_div=<span class="integer">10</span>, ref_level=<span class="integer">50</span>, sample_rate=<span class="integer">1</span>, fft_size=<span class="integer">512</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L135">
<a href="#L135">135</a>
</th>
<td class="line-code">
<pre>                 fft_rate=default_fft_rate, average=<span class="predefined-constant">False</span>, avg_alpha=<span class="predefined-constant">None</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L136">
<a href="#L136">136</a>
</th>
<td class="line-code">
<pre>                 title=<span class="string"><span class="delimiter">'</span><span class="delimiter">'</span></span>, size=default_fftsink_size, peak_hold=<span class="predefined-constant">False</span>):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L137">
<a href="#L137">137</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L138">
<a href="#L138">138</a>
</th>
<td class="line-code">
<pre>        gr.hier_block2.__init__(<span class="predefined-constant">self</span>, <span class="string"><span class="delimiter">"</span><span class="content">fft_sink_c</span><span class="delimiter">"</span></span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L139">
<a href="#L139">139</a>
</th>
<td class="line-code">
<pre>                                gr.io_signature(<span class="integer">1</span>, <span class="integer">1</span>, gr.sizeof_gr_complex),
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L140">
<a href="#L140">140</a>
</th>
<td class="line-code">
<pre>                                gr.io_signature(<span class="integer">0</span>,<span class="integer">0</span>,<span class="integer">0</span>))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L141">
<a href="#L141">141</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L142">
<a href="#L142">142</a>
</th>
<td class="line-code">
<pre>        fft_sink_base.__init__(<span class="predefined-constant">self</span>, input_is_real=<span class="predefined-constant">False</span>, baseband_freq=baseband_freq,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L143">
<a href="#L143">143</a>
</th>
<td class="line-code">
<pre>                               y_per_div=y_per_div, ref_level=ref_level,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L144">
<a href="#L144">144</a>
</th>
<td class="line-code">
<pre>                               sample_rate=sample_rate, fft_size=fft_size,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L145">
<a href="#L145">145</a>
</th>
<td class="line-code">
<pre>                               fft_rate=fft_rate,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L146">
<a href="#L146">146</a>
</th>
<td class="line-code">
<pre>                               average=average, avg_alpha=avg_alpha, title=title,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L147">
<a href="#L147">147</a>
</th>
<td class="line-code">
<pre>                               peak_hold=peak_hold)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L148">
<a href="#L148">148</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L149">
<a href="#L149">149</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.s2p = gr.stream_to_vector(gr.sizeof_gr_complex, <span class="predefined-constant">self</span>.fft_size)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L150">
<a href="#L150">150</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.one_in_n = gr.keep_one_in_n(gr.sizeof_gr_complex * <span class="predefined-constant">self</span>.fft_size,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L151">
<a href="#L151">151</a>
</th>
<td class="line-code">
<pre>                                         <span class="predefined">max</span>(<span class="integer">1</span>, <span class="predefined">int</span>(<span class="predefined-constant">self</span>.sample_rate/<span class="predefined-constant">self</span>.fft_size/<span class="predefined-constant">self</span>.fft_rate)))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L152">
<a href="#L152">152</a>
</th>
<td class="line-code">
<pre>        
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L153">
<a href="#L153">153</a>
</th>
<td class="line-code">
<pre>        mywindow = window.blackmanharris(<span class="predefined-constant">self</span>.fft_size)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L154">
<a href="#L154">154</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fft = gr.fft_vcc(<span class="predefined-constant">self</span>.fft_size, <span class="predefined-constant">True</span>, mywindow)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L155">
<a href="#L155">155</a>
</th>
<td class="line-code">
<pre>        power = <span class="integer">0</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L156">
<a href="#L156">156</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">for</span> tap <span class="keyword">in</span> mywindow:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L157">
<a href="#L157">157</a>
</th>
<td class="line-code">
<pre>            power += tap*tap
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L158">
<a href="#L158">158</a>
</th>
<td class="line-code">
<pre>            
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L159">
<a href="#L159">159</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.c2mag = gr.complex_to_mag(<span class="predefined-constant">self</span>.fft_size)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L160">
<a href="#L160">160</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.avg = gr.single_pole_iir_filter_ff(<span class="float">1.0</span>, <span class="predefined-constant">self</span>.fft_size)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L161">
<a href="#L161">161</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L162">
<a href="#L162">162</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># FIXME  We need to add 3dB to all bins but the DC bin</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L163">
<a href="#L163">163</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.log = gr.nlog10_ff(<span class="integer">20</span>, <span class="predefined-constant">self</span>.fft_size,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L164">
<a href="#L164">164</a>
</th>
<td class="line-code">
<pre>                                -<span class="integer">20</span>*math.log10(<span class="predefined-constant">self</span>.fft_size)-<span class="integer">10</span>*math.log10(power/<span class="predefined-constant">self</span>.fft_size))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L165">
<a href="#L165">165</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.sink = gr.message_sink(gr.sizeof_float * <span class="predefined-constant">self</span>.fft_size, <span class="predefined-constant">self</span>.msgq, <span class="predefined-constant">True</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L166">
<a href="#L166">166</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.connect(<span class="predefined-constant">self</span>, <span class="predefined-constant">self</span>.s2p, <span class="predefined-constant">self</span>.one_in_n, <span class="predefined-constant">self</span>.fft, <span class="predefined-constant">self</span>.c2mag, <span class="predefined-constant">self</span>.avg, <span class="predefined-constant">self</span>.log, <span class="predefined-constant">self</span>.sink)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L167">
<a href="#L167">167</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L168">
<a href="#L168">168</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.win = fft_window(<span class="predefined-constant">self</span>, parent, size=size)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L169">
<a href="#L169">169</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.set_average(<span class="predefined-constant">self</span>.average)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L170">
<a href="#L170">170</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L171">
<a href="#L171">171</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L172">
<a href="#L172">172</a>
</th>
<td class="line-code">
<pre><span class="comment"># ------------------------------------------------------------------------</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L173">
<a href="#L173">173</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L174">
<a href="#L174">174</a>
</th>
<td class="line-code">
<pre>myDATA_EVENT = wx.NewEventType()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L175">
<a href="#L175">175</a>
</th>
<td class="line-code">
<pre>EVT_DATA_EVENT = wx.PyEventBinder (myDATA_EVENT, <span class="integer">0</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L176">
<a href="#L176">176</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L177">
<a href="#L177">177</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L178">
<a href="#L178">178</a>
</th>
<td class="line-code">
<pre><span class="keyword">class</span> <span class="class">DataEvent</span>(wx.PyEvent):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L179">
<a href="#L179">179</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">__init__</span>(<span class="predefined-constant">self</span>, data):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L180">
<a href="#L180">180</a>
</th>
<td class="line-code">
<pre>        wx.PyEvent.__init__(<span class="predefined-constant">self</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L181">
<a href="#L181">181</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.SetEventType (myDATA_EVENT)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L182">
<a href="#L182">182</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.data = data
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L183">
<a href="#L183">183</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L184">
<a href="#L184">184</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">Clone</span> (<span class="predefined-constant">self</span>): 
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L185">
<a href="#L185">185</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.__class__ (<span class="predefined-constant">self</span>.GetId())
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L186">
<a href="#L186">186</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L187">
<a href="#L187">187</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L188">
<a href="#L188">188</a>
</th>
<td class="line-code">
<pre><span class="keyword">class</span> <span class="class">input_watcher</span> (threading.Thread):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L189">
<a href="#L189">189</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">__init__</span> (<span class="predefined-constant">self</span>, msgq, fft_size, event_receiver, **kwds):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L190">
<a href="#L190">190</a>
</th>
<td class="line-code">
<pre>        threading.Thread.__init__ (<span class="predefined-constant">self</span>, **kwds)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L191">
<a href="#L191">191</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.setDaemon (<span class="integer">1</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L192">
<a href="#L192">192</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.msgq = msgq
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L193">
<a href="#L193">193</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fft_size = fft_size
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L194">
<a href="#L194">194</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.event_receiver = event_receiver
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L195">
<a href="#L195">195</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.keep_running = <span class="predefined-constant">True</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L196">
<a href="#L196">196</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.start ()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L197">
<a href="#L197">197</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L198">
<a href="#L198">198</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">run</span> (<span class="predefined-constant">self</span>):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L199">
<a href="#L199">199</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">while</span> (<span class="predefined-constant">self</span>.keep_running):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L200">
<a href="#L200">200</a>
</th>
<td class="line-code">
<pre>            msg = <span class="predefined-constant">self</span>.msgq.delete_head()  <span class="comment"># blocking read of message queue</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L201">
<a href="#L201">201</a>
</th>
<td class="line-code">
<pre>            itemsize = <span class="predefined">int</span>(msg.arg1())
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L202">
<a href="#L202">202</a>
</th>
<td class="line-code">
<pre>            nitems = <span class="predefined">int</span>(msg.arg2())
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L203">
<a href="#L203">203</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L204">
<a href="#L204">204</a>
</th>
<td class="line-code">
<pre>            s = msg.to_string()            <span class="comment"># get the body of the msg as a string</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L205">
<a href="#L205">205</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L206">
<a href="#L206">206</a>
</th>
<td class="line-code">
<pre>            <span class="comment"># There may be more than one FFT frame in the message.</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L207">
<a href="#L207">207</a>
</th>
<td class="line-code">
<pre>            <span class="comment"># If so, we take only the last one</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L208">
<a href="#L208">208</a>
</th>
<td class="line-code">
<pre>            <span class="keyword">if</span> nitems &gt; <span class="integer">1</span>:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L209">
<a href="#L209">209</a>
</th>
<td class="line-code">
<pre>                start = itemsize * (nitems - <span class="integer">1</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L210">
<a href="#L210">210</a>
</th>
<td class="line-code">
<pre>                s = s[start:start+itemsize]
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L211">
<a href="#L211">211</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L212">
<a href="#L212">212</a>
</th>
<td class="line-code">
<pre>            complex_data = numpy.fromstring (s, numpy.float32)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L213">
<a href="#L213">213</a>
</th>
<td class="line-code">
<pre>            de = DataEvent (complex_data)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L214">
<a href="#L214">214</a>
</th>
<td class="line-code">
<pre>            wx.PostEvent (<span class="predefined-constant">self</span>.event_receiver, de)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L215">
<a href="#L215">215</a>
</th>
<td class="line-code">
<pre>            <span class="keyword">del</span> de
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L216">
<a href="#L216">216</a>
</th>
<td class="line-code">
<pre>    
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L217">
<a href="#L217">217</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L218">
<a href="#L218">218</a>
</th>
<td class="line-code">
<pre><span class="keyword">class</span> <span class="class">fft_window</span> (plot.PlotCanvas):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L219">
<a href="#L219">219</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">__init__</span> (<span class="predefined-constant">self</span>, fftsink, parent, id = -<span class="integer">1</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L220">
<a href="#L220">220</a>
</th>
<td class="line-code">
<pre>                  pos = wx.DefaultPosition, size = wx.DefaultSize,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L221">
<a href="#L221">221</a>
</th>
<td class="line-code">
<pre>                  style = wx.DEFAULT_FRAME_STYLE, name = <span class="string"><span class="delimiter">"</span><span class="delimiter">"</span></span>):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L222">
<a href="#L222">222</a>
</th>
<td class="line-code">
<pre>        plot.PlotCanvas.__init__ (<span class="predefined-constant">self</span>, parent, <span class="predefined">id</span>, pos, size, style, name)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L223">
<a href="#L223">223</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L224">
<a href="#L224">224</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.y_range = <span class="predefined-constant">None</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L225">
<a href="#L225">225</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fftsink = fftsink
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L226">
<a href="#L226">226</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.peak_hold = <span class="predefined-constant">False</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L227">
<a href="#L227">227</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.peak_vals = <span class="predefined-constant">None</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L228">
<a href="#L228">228</a>
</th>
<td class="line-code">
<pre>        
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L229">
<a href="#L229">229</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.SetEnableGrid (<span class="predefined-constant">True</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L230">
<a href="#L230">230</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># self.SetEnableZoom (True)</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L231">
<a href="#L231">231</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># self.SetBackgroundColour ('black')</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L232">
<a href="#L232">232</a>
</th>
<td class="line-code">
<pre>        
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L233">
<a href="#L233">233</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.build_popup_menu()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L234">
<a href="#L234">234</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.set_baseband_freq(<span class="float">0.0</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L235">
<a href="#L235">235</a>
</th>
<td class="line-code">
<pre>                
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L236">
<a href="#L236">236</a>
</th>
<td class="line-code">
<pre>        EVT_DATA_EVENT (<span class="predefined-constant">self</span>, <span class="predefined-constant">self</span>.set_data)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L237">
<a href="#L237">237</a>
</th>
<td class="line-code">
<pre>        wx.EVT_CLOSE (<span class="predefined-constant">self</span>, <span class="predefined-constant">self</span>.on_close_window)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L238">
<a href="#L238">238</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_RIGHT_UP, <span class="predefined-constant">self</span>.on_right_click)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L239">
<a href="#L239">239</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MOTION, <span class="predefined-constant">self</span>.evt_motion)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L240">
<a href="#L240">240</a>
</th>
<td class="line-code">
<pre>        
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L241">
<a href="#L241">241</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.input_watcher = input_watcher(fftsink.msgq, fftsink.fft_size, <span class="predefined-constant">self</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L242">
<a href="#L242">242</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L243">
<a href="#L243">243</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">set_scale</span>(<span class="predefined-constant">self</span>, freq):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L244">
<a href="#L244">244</a>
</th>
<td class="line-code">
<pre>        x = <span class="predefined">max</span>(<span class="predefined">abs</span>(<span class="predefined-constant">self</span>.fftsink.sample_rate), <span class="predefined">abs</span>(<span class="predefined-constant">self</span>.fftsink.baseband_freq))        
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L245">
<a href="#L245">245</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">if</span> x &gt;= <span class="float">1e9</span>:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L246">
<a href="#L246">246</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._scale_factor = <span class="float">1e-9</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L247">
<a href="#L247">247</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._units = <span class="string"><span class="delimiter">"</span><span class="content">GHz</span><span class="delimiter">"</span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L248">
<a href="#L248">248</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._format = <span class="string"><span class="delimiter">"</span><span class="content">%3.6f</span><span class="delimiter">"</span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L249">
<a href="#L249">249</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">elif</span> x &gt;= <span class="float">1e6</span>:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L250">
<a href="#L250">250</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._scale_factor = <span class="float">1e-6</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L251">
<a href="#L251">251</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._units = <span class="string"><span class="delimiter">"</span><span class="content">MHz</span><span class="delimiter">"</span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L252">
<a href="#L252">252</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._format = <span class="string"><span class="delimiter">"</span><span class="content">%3.3f</span><span class="delimiter">"</span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L253">
<a href="#L253">253</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">else</span>:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L254">
<a href="#L254">254</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._scale_factor = <span class="float">1e-3</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L255">
<a href="#L255">255</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._units = <span class="string"><span class="delimiter">"</span><span class="content">kHz</span><span class="delimiter">"</span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L256">
<a href="#L256">256</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._format = <span class="string"><span class="delimiter">"</span><span class="content">%3.3f</span><span class="delimiter">"</span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L257">
<a href="#L257">257</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L258">
<a href="#L258">258</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">set_baseband_freq</span>(<span class="predefined-constant">self</span>, baseband_freq):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L259">
<a href="#L259">259</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">if</span> <span class="predefined-constant">self</span>.peak_hold:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L260">
<a href="#L260">260</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.peak_vals = <span class="predefined-constant">None</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L261">
<a href="#L261">261</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.set_scale(baseband_freq)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L262">
<a href="#L262">262</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fftsink.set_baseband_freq(baseband_freq)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L263">
<a href="#L263">263</a>
</th>
<td class="line-code">
<pre>        
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L264">
<a href="#L264">264</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">on_close_window</span> (<span class="predefined-constant">self</span>, event):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L265">
<a href="#L265">265</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">print</span> <span class="string"><span class="delimiter">"</span><span class="content">fft_window:on_close_window</span><span class="delimiter">"</span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L266">
<a href="#L266">266</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.keep_running = <span class="predefined-constant">False</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L267">
<a href="#L267">267</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L268">
<a href="#L268">268</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L269">
<a href="#L269">269</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">set_data</span> (<span class="predefined-constant">self</span>, evt):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L270">
<a href="#L270">270</a>
</th>
<td class="line-code">
<pre>        dB = evt.data
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L271">
<a href="#L271">271</a>
</th>
<td class="line-code">
<pre>        L = <span class="predefined">len</span> (dB)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L272">
<a href="#L272">272</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L273">
<a href="#L273">273</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">if</span> <span class="predefined-constant">self</span>.peak_hold:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L274">
<a href="#L274">274</a>
</th>
<td class="line-code">
<pre>            <span class="keyword">if</span> <span class="predefined-constant">self</span>.peak_vals <span class="keyword">is</span> <span class="predefined-constant">None</span>:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L275">
<a href="#L275">275</a>
</th>
<td class="line-code">
<pre>                <span class="predefined-constant">self</span>.peak_vals = dB
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L276">
<a href="#L276">276</a>
</th>
<td class="line-code">
<pre>            <span class="keyword">else</span>:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L277">
<a href="#L277">277</a>
</th>
<td class="line-code">
<pre>                <span class="predefined-constant">self</span>.peak_vals = numpy.maximum(dB, <span class="predefined-constant">self</span>.peak_vals)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L278">
<a href="#L278">278</a>
</th>
<td class="line-code">
<pre>                dB = <span class="predefined-constant">self</span>.peak_vals
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L279">
<a href="#L279">279</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L280">
<a href="#L280">280</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">if</span> <span class="predefined-constant">self</span>.fftsink.input_is_real:     <span class="comment"># only plot 1/2 the points</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L281">
<a href="#L281">281</a>
</th>
<td class="line-code">
<pre>            x_vals = ((numpy.arange (L/<span class="integer">2</span>) * (<span class="predefined-constant">self</span>.fftsink.sample_rate 
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L282">
<a href="#L282">282</a>
</th>
<td class="line-code">
<pre>                       * <span class="predefined-constant">self</span>._scale_factor / L))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L283">
<a href="#L283">283</a>
</th>
<td class="line-code">
<pre>                      + <span class="predefined-constant">self</span>.fftsink.baseband_freq * <span class="predefined-constant">self</span>._scale_factor)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L284">
<a href="#L284">284</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._points = numpy.zeros((<span class="predefined">len</span>(x_vals), <span class="integer">2</span>), numpy.float64)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L285">
<a href="#L285">285</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._points[:,<span class="integer">0</span>] = x_vals
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L286">
<a href="#L286">286</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._points[:,<span class="integer">1</span>] = dB[<span class="integer">0</span>:L/<span class="integer">2</span>]
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L287">
<a href="#L287">287</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">else</span>:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L288">
<a href="#L288">288</a>
</th>
<td class="line-code">
<pre>            <span class="comment"># the "negative freqs" are in the second half of the array</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L289">
<a href="#L289">289</a>
</th>
<td class="line-code">
<pre>            x_vals = ((numpy.arange (-L/<span class="integer">2</span>, L/<span class="integer">2</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L290">
<a href="#L290">290</a>
</th>
<td class="line-code">
<pre>                       * (<span class="predefined-constant">self</span>.fftsink.sample_rate * <span class="predefined-constant">self</span>._scale_factor / L))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L291">
<a href="#L291">291</a>
</th>
<td class="line-code">
<pre>                      + <span class="predefined-constant">self</span>.fftsink.baseband_freq * <span class="predefined-constant">self</span>._scale_factor)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L292">
<a href="#L292">292</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._points = numpy.zeros((<span class="predefined">len</span>(x_vals), <span class="integer">2</span>), numpy.float64)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L293">
<a href="#L293">293</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._points[:,<span class="integer">0</span>] = x_vals
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L294">
<a href="#L294">294</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>._points[:,<span class="integer">1</span>] = numpy.concatenate ((dB[L/<span class="integer">2</span>:], dB[<span class="integer">0</span>:L/<span class="integer">2</span>]))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L295">
<a href="#L295">295</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L296">
<a href="#L296">296</a>
</th>
<td class="line-code">
<pre>        lines = plot.PolyLine (<span class="predefined-constant">self</span>._points, colour=<span class="string"><span class="delimiter">'</span><span class="content">BLUE</span><span class="delimiter">'</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L297">
<a href="#L297">297</a>
</th>
<td class="line-code">
<pre>        graphics = plot.PlotGraphics ([lines],
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L298">
<a href="#L298">298</a>
</th>
<td class="line-code">
<pre>                                      title=<span class="predefined-constant">self</span>.fftsink.title,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L299">
<a href="#L299">299</a>
</th>
<td class="line-code">
<pre>                                      xLabel = <span class="predefined-constant">self</span>._units, yLabel = <span class="string"><span class="delimiter">"</span><span class="content">dB</span><span class="delimiter">"</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L300">
<a href="#L300">300</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L301">
<a href="#L301">301</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Draw (graphics, xAxis=<span class="predefined-constant">None</span>, yAxis=<span class="predefined-constant">self</span>.y_range)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L302">
<a href="#L302">302</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.update_y_range ()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L303">
<a href="#L303">303</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L304">
<a href="#L304">304</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L305">
<a href="#L305">305</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">set_peak_hold</span>(<span class="predefined-constant">self</span>, enable):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L306">
<a href="#L306">306</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.peak_hold = enable
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L307">
<a href="#L307">307</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.peak_vals = <span class="predefined-constant">None</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L308">
<a href="#L308">308</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L309">
<a href="#L309">309</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">update_y_range</span> (<span class="predefined-constant">self</span>):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L310">
<a href="#L310">310</a>
</th>
<td class="line-code">
<pre>        ymax = <span class="predefined-constant">self</span>.fftsink.ref_level
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L311">
<a href="#L311">311</a>
</th>
<td class="line-code">
<pre>        ymin = <span class="predefined-constant">self</span>.fftsink.ref_level - <span class="predefined-constant">self</span>.fftsink.y_per_div * <span class="predefined-constant">self</span>.fftsink.y_divs
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L312">
<a href="#L312">312</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.y_range = <span class="predefined-constant">self</span>._axisInterval (<span class="string"><span class="delimiter">'</span><span class="content">min</span><span class="delimiter">'</span></span>, ymin, ymax)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L313">
<a href="#L313">313</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L314">
<a href="#L314">314</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">on_average</span>(<span class="predefined-constant">self</span>, evt):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L315">
<a href="#L315">315</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># print "on_average"</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L316">
<a href="#L316">316</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fftsink.set_average(evt.IsChecked())
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L317">
<a href="#L317">317</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L318">
<a href="#L318">318</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">on_peak_hold</span>(<span class="predefined-constant">self</span>, evt):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L319">
<a href="#L319">319</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># print "on_peak_hold"</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L320">
<a href="#L320">320</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fftsink.set_peak_hold(evt.IsChecked())
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L321">
<a href="#L321">321</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L322">
<a href="#L322">322</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">on_incr_ref_level</span>(<span class="predefined-constant">self</span>, evt):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L323">
<a href="#L323">323</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># print "on_incr_ref_level"</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L324">
<a href="#L324">324</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fftsink.set_ref_level(<span class="predefined-constant">self</span>.fftsink.ref_level
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L325">
<a href="#L325">325</a>
</th>
<td class="line-code">
<pre>                                   + <span class="predefined-constant">self</span>.fftsink.y_per_div)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L326">
<a href="#L326">326</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L327">
<a href="#L327">327</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">on_decr_ref_level</span>(<span class="predefined-constant">self</span>, evt):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L328">
<a href="#L328">328</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># print "on_decr_ref_level"</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L329">
<a href="#L329">329</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fftsink.set_ref_level(<span class="predefined-constant">self</span>.fftsink.ref_level
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L330">
<a href="#L330">330</a>
</th>
<td class="line-code">
<pre>                                   - <span class="predefined-constant">self</span>.fftsink.y_per_div)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L331">
<a href="#L331">331</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L332">
<a href="#L332">332</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">on_incr_y_per_div</span>(<span class="predefined-constant">self</span>, evt):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L333">
<a href="#L333">333</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># print "on_incr_y_per_div"</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L334">
<a href="#L334">334</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fftsink.set_y_per_div(next_up(<span class="predefined-constant">self</span>.fftsink.y_per_div, (<span class="integer">1</span>,<span class="integer">2</span>,<span class="integer">5</span>,<span class="integer">10</span>,<span class="integer">20</span>)))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L335">
<a href="#L335">335</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L336">
<a href="#L336">336</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">on_decr_y_per_div</span>(<span class="predefined-constant">self</span>, evt):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L337">
<a href="#L337">337</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># print "on_decr_y_per_div"</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L338">
<a href="#L338">338</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.fftsink.set_y_per_div(next_down(<span class="predefined-constant">self</span>.fftsink.y_per_div, (<span class="integer">1</span>,<span class="integer">2</span>,<span class="integer">5</span>,<span class="integer">10</span>,<span class="integer">20</span>)))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L339">
<a href="#L339">339</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L340">
<a href="#L340">340</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">on_y_per_div</span>(<span class="predefined-constant">self</span>, evt):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L341">
<a href="#L341">341</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># print "on_y_per_div"</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L342">
<a href="#L342">342</a>
</th>
<td class="line-code">
<pre>        Id = evt.GetId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L343">
<a href="#L343">343</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">if</span> Id == <span class="predefined-constant">self</span>.id_y_per_div_1:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L344">
<a href="#L344">344</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.fftsink.set_y_per_div(<span class="integer">1</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L345">
<a href="#L345">345</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">elif</span> Id == <span class="predefined-constant">self</span>.id_y_per_div_2:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L346">
<a href="#L346">346</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.fftsink.set_y_per_div(<span class="integer">2</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L347">
<a href="#L347">347</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">elif</span> Id == <span class="predefined-constant">self</span>.id_y_per_div_5:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L348">
<a href="#L348">348</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.fftsink.set_y_per_div(<span class="integer">5</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L349">
<a href="#L349">349</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">elif</span> Id == <span class="predefined-constant">self</span>.id_y_per_div_10:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L350">
<a href="#L350">350</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.fftsink.set_y_per_div(<span class="integer">10</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L351">
<a href="#L351">351</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">elif</span> Id == <span class="predefined-constant">self</span>.id_y_per_div_20:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L352">
<a href="#L352">352</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.fftsink.set_y_per_div(<span class="integer">20</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L353">
<a href="#L353">353</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L354">
<a href="#L354">354</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">on_right_click</span>(<span class="predefined-constant">self</span>, event):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L355">
<a href="#L355">355</a>
</th>
<td class="line-code">
<pre>        menu = <span class="predefined-constant">self</span>.popup_menu
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L356">
<a href="#L356">356</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">for</span> <span class="predefined">id</span>, pred <span class="keyword">in</span> <span class="predefined-constant">self</span>.checkmarks.items():
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L357">
<a href="#L357">357</a>
</th>
<td class="line-code">
<pre>            item = menu.FindItemById(<span class="predefined">id</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L358">
<a href="#L358">358</a>
</th>
<td class="line-code">
<pre>            item.Check(pred())
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L359">
<a href="#L359">359</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.PopupMenu(menu, event.GetPosition())
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L360">
<a href="#L360">360</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L361">
<a href="#L361">361</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">evt_motion</span>(<span class="predefined-constant">self</span>, event):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L362">
<a href="#L362">362</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># Clip to plotted values</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L363">
<a href="#L363">363</a>
</th>
<td class="line-code">
<pre>        (ux, uy) = <span class="predefined-constant">self</span>.GetXY(event)      <span class="comment"># Scaled position</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L364">
<a href="#L364">364</a>
</th>
<td class="line-code">
<pre>        x_vals = numpy.array(<span class="predefined-constant">self</span>._points[:,<span class="integer">0</span>])
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L365">
<a href="#L365">365</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">if</span> ux &lt; x_vals[<span class="integer">0</span>] <span class="keyword">or</span> ux &gt; x_vals[-<span class="integer">1</span>]:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L366">
<a href="#L366">366</a>
</th>
<td class="line-code">
<pre>            tip = <span class="predefined-constant">self</span>.GetToolTip()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L367">
<a href="#L367">367</a>
</th>
<td class="line-code">
<pre>            <span class="keyword">if</span> tip:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L368">
<a href="#L368">368</a>
</th>
<td class="line-code">
<pre>                tip.Enable(<span class="predefined-constant">False</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L369">
<a href="#L369">369</a>
</th>
<td class="line-code">
<pre>            <span class="keyword">return</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L370">
<a href="#L370">370</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L371">
<a href="#L371">371</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># Get nearest X value (is there a better way)?</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L372">
<a href="#L372">372</a>
</th>
<td class="line-code">
<pre>        ind = numpy.argmin(numpy.abs(x_vals-ux))
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L373">
<a href="#L373">373</a>
</th>
<td class="line-code">
<pre>        x_val = x_vals[ind]
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L374">
<a href="#L374">374</a>
</th>
<td class="line-code">
<pre>        db_val = <span class="predefined-constant">self</span>._points[ind, <span class="integer">1</span>]
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L375">
<a href="#L375">375</a>
</th>
<td class="line-code">
<pre>        text = (<span class="predefined-constant">self</span>._format+<span class="string"><span class="delimiter">"</span><span class="content"> %s dB=%3.3f</span><span class="delimiter">"</span></span>) % (x_val, <span class="predefined-constant">self</span>._units, db_val)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L376">
<a href="#L376">376</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L377">
<a href="#L377">377</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># Display the tooltip</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L378">
<a href="#L378">378</a>
</th>
<td class="line-code">
<pre>        tip = wx.ToolTip(text)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L379">
<a href="#L379">379</a>
</th>
<td class="line-code">
<pre>        tip.Enable(<span class="predefined-constant">True</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L380">
<a href="#L380">380</a>
</th>
<td class="line-code">
<pre>        tip.SetDelay(<span class="integer">0</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L381">
<a href="#L381">381</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.SetToolTip(tip)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L382">
<a href="#L382">382</a>
</th>
<td class="line-code">
<pre>        
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L383">
<a href="#L383">383</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">build_popup_menu</span>(<span class="predefined-constant">self</span>):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L384">
<a href="#L384">384</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.id_incr_ref_level = wx.NewId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L385">
<a href="#L385">385</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.id_decr_ref_level = wx.NewId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L386">
<a href="#L386">386</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.id_incr_y_per_div = wx.NewId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L387">
<a href="#L387">387</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.id_decr_y_per_div = wx.NewId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L388">
<a href="#L388">388</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.id_y_per_div_1 = wx.NewId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L389">
<a href="#L389">389</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.id_y_per_div_2 = wx.NewId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L390">
<a href="#L390">390</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.id_y_per_div_5 = wx.NewId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L391">
<a href="#L391">391</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.id_y_per_div_10 = wx.NewId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L392">
<a href="#L392">392</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.id_y_per_div_20 = wx.NewId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L393">
<a href="#L393">393</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.id_average = wx.NewId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L394">
<a href="#L394">394</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.id_peak_hold = wx.NewId()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L395">
<a href="#L395">395</a>
</th>
<td class="line-code">
<pre>        
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L396">
<a href="#L396">396</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MENU, <span class="predefined-constant">self</span>.on_average, id=<span class="predefined-constant">self</span>.id_average)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L397">
<a href="#L397">397</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MENU, <span class="predefined-constant">self</span>.on_peak_hold, id=<span class="predefined-constant">self</span>.id_peak_hold)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L398">
<a href="#L398">398</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MENU, <span class="predefined-constant">self</span>.on_incr_ref_level, id=<span class="predefined-constant">self</span>.id_incr_ref_level)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L399">
<a href="#L399">399</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MENU, <span class="predefined-constant">self</span>.on_decr_ref_level, id=<span class="predefined-constant">self</span>.id_decr_ref_level)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L400">
<a href="#L400">400</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MENU, <span class="predefined-constant">self</span>.on_incr_y_per_div, id=<span class="predefined-constant">self</span>.id_incr_y_per_div)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L401">
<a href="#L401">401</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MENU, <span class="predefined-constant">self</span>.on_decr_y_per_div, id=<span class="predefined-constant">self</span>.id_decr_y_per_div)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L402">
<a href="#L402">402</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MENU, <span class="predefined-constant">self</span>.on_y_per_div, id=<span class="predefined-constant">self</span>.id_y_per_div_1)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L403">
<a href="#L403">403</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MENU, <span class="predefined-constant">self</span>.on_y_per_div, id=<span class="predefined-constant">self</span>.id_y_per_div_2)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L404">
<a href="#L404">404</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MENU, <span class="predefined-constant">self</span>.on_y_per_div, id=<span class="predefined-constant">self</span>.id_y_per_div_5)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L405">
<a href="#L405">405</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MENU, <span class="predefined-constant">self</span>.on_y_per_div, id=<span class="predefined-constant">self</span>.id_y_per_div_10)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L406">
<a href="#L406">406</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.Bind(wx.EVT_MENU, <span class="predefined-constant">self</span>.on_y_per_div, id=<span class="predefined-constant">self</span>.id_y_per_div_20)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L407">
<a href="#L407">407</a>
</th>
<td class="line-code">
<pre>        
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L408">
<a href="#L408">408</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># make a menu</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L409">
<a href="#L409">409</a>
</th>
<td class="line-code">
<pre>        menu = wx.Menu()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L410">
<a href="#L410">410</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.popup_menu = menu
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L411">
<a href="#L411">411</a>
</th>
<td class="line-code">
<pre>        menu.AppendCheckItem(<span class="predefined-constant">self</span>.id_average, <span class="string"><span class="delimiter">"</span><span class="content">Average</span><span class="delimiter">"</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L412">
<a href="#L412">412</a>
</th>
<td class="line-code">
<pre>        menu.AppendCheckItem(<span class="predefined-constant">self</span>.id_peak_hold, <span class="string"><span class="delimiter">"</span><span class="content">Peak Hold</span><span class="delimiter">"</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L413">
<a href="#L413">413</a>
</th>
<td class="line-code">
<pre>        menu.Append(<span class="predefined-constant">self</span>.id_incr_ref_level, <span class="string"><span class="delimiter">"</span><span class="content">Incr Ref Level</span><span class="delimiter">"</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L414">
<a href="#L414">414</a>
</th>
<td class="line-code">
<pre>        menu.Append(<span class="predefined-constant">self</span>.id_decr_ref_level, <span class="string"><span class="delimiter">"</span><span class="content">Decr Ref Level</span><span class="delimiter">"</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L415">
<a href="#L415">415</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># menu.Append(self.id_incr_y_per_div, "Incr dB/div")</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L416">
<a href="#L416">416</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># menu.Append(self.id_decr_y_per_div, "Decr dB/div")</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L417">
<a href="#L417">417</a>
</th>
<td class="line-code">
<pre>        menu.AppendSeparator()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L418">
<a href="#L418">418</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># we'd use RadioItems for these, but they're not supported on Mac</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L419">
<a href="#L419">419</a>
</th>
<td class="line-code">
<pre>        menu.AppendCheckItem(<span class="predefined-constant">self</span>.id_y_per_div_1, <span class="string"><span class="delimiter">"</span><span class="content">1 dB/div</span><span class="delimiter">"</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L420">
<a href="#L420">420</a>
</th>
<td class="line-code">
<pre>        menu.AppendCheckItem(<span class="predefined-constant">self</span>.id_y_per_div_2, <span class="string"><span class="delimiter">"</span><span class="content">2 dB/div</span><span class="delimiter">"</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L421">
<a href="#L421">421</a>
</th>
<td class="line-code">
<pre>        menu.AppendCheckItem(<span class="predefined-constant">self</span>.id_y_per_div_5, <span class="string"><span class="delimiter">"</span><span class="content">5 dB/div</span><span class="delimiter">"</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L422">
<a href="#L422">422</a>
</th>
<td class="line-code">
<pre>        menu.AppendCheckItem(<span class="predefined-constant">self</span>.id_y_per_div_10, <span class="string"><span class="delimiter">"</span><span class="content">10 dB/div</span><span class="delimiter">"</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L423">
<a href="#L423">423</a>
</th>
<td class="line-code">
<pre>        menu.AppendCheckItem(<span class="predefined-constant">self</span>.id_y_per_div_20, <span class="string"><span class="delimiter">"</span><span class="content">20 dB/div</span><span class="delimiter">"</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L424">
<a href="#L424">424</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L425">
<a href="#L425">425</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.checkmarks = {
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L426">
<a href="#L426">426</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.id_average : <span class="keyword">lambda</span> : <span class="predefined-constant">self</span>.fftsink.average,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L427">
<a href="#L427">427</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.id_peak_hold : <span class="keyword">lambda</span> : <span class="predefined-constant">self</span>.fftsink.peak_hold,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L428">
<a href="#L428">428</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.id_y_per_div_1 : <span class="keyword">lambda</span> : <span class="predefined-constant">self</span>.fftsink.y_per_div == <span class="integer">1</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L429">
<a href="#L429">429</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.id_y_per_div_2 : <span class="keyword">lambda</span> : <span class="predefined-constant">self</span>.fftsink.y_per_div == <span class="integer">2</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L430">
<a href="#L430">430</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.id_y_per_div_5 : <span class="keyword">lambda</span> : <span class="predefined-constant">self</span>.fftsink.y_per_div == <span class="integer">5</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L431">
<a href="#L431">431</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.id_y_per_div_10 : <span class="keyword">lambda</span> : <span class="predefined-constant">self</span>.fftsink.y_per_div == <span class="integer">10</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L432">
<a href="#L432">432</a>
</th>
<td class="line-code">
<pre>            <span class="predefined-constant">self</span>.id_y_per_div_20 : <span class="keyword">lambda</span> : <span class="predefined-constant">self</span>.fftsink.y_per_div == <span class="integer">20</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L433">
<a href="#L433">433</a>
</th>
<td class="line-code">
<pre>            }
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L434">
<a href="#L434">434</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L435">
<a href="#L435">435</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L436">
<a href="#L436">436</a>
</th>
<td class="line-code">
<pre><span class="keyword">def</span> <span class="function">next_up</span>(v, seq):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L437">
<a href="#L437">437</a>
</th>
<td class="line-code">
<pre>    <span class="comment"><span class="delimiter">"""</span><span class="content"></span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L438">
<a href="#L438">438</a>
</th>
<td class="line-code">
<pre><span class="comment"><span class="content"></span><span class="content">    Return the first item in seq that is &gt; v.</span><span class="content"></span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L439">
<a href="#L439">439</a>
</th>
<td class="line-code">
<pre><span class="comment"><span class="content"></span><span class="content">    </span><span class="delimiter">"""</span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L440">
<a href="#L440">440</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">for</span> s <span class="keyword">in</span> seq:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L441">
<a href="#L441">441</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">if</span> s &gt; v:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L442">
<a href="#L442">442</a>
</th>
<td class="line-code">
<pre>            <span class="keyword">return</span> s
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L443">
<a href="#L443">443</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">return</span> v
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L444">
<a href="#L444">444</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L445">
<a href="#L445">445</a>
</th>
<td class="line-code">
<pre><span class="keyword">def</span> <span class="function">next_down</span>(v, seq):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L446">
<a href="#L446">446</a>
</th>
<td class="line-code">
<pre>    <span class="comment"><span class="delimiter">"""</span><span class="content"></span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L447">
<a href="#L447">447</a>
</th>
<td class="line-code">
<pre><span class="comment"><span class="content"></span><span class="content">    Return the last item in seq that is &lt; v.</span><span class="content"></span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L448">
<a href="#L448">448</a>
</th>
<td class="line-code">
<pre><span class="comment"><span class="content"></span><span class="content">    </span><span class="delimiter">"""</span></span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L449">
<a href="#L449">449</a>
</th>
<td class="line-code">
<pre>    rseq = <span class="predefined">list</span>(seq[:])
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L450">
<a href="#L450">450</a>
</th>
<td class="line-code">
<pre>    rseq.reverse()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L451">
<a href="#L451">451</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L452">
<a href="#L452">452</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">for</span> s <span class="keyword">in</span> rseq:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L453">
<a href="#L453">453</a>
</th>
<td class="line-code">
<pre>        <span class="keyword">if</span> s &lt; v:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L454">
<a href="#L454">454</a>
</th>
<td class="line-code">
<pre>            <span class="keyword">return</span> s
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L455">
<a href="#L455">455</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">return</span> v
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L456">
<a href="#L456">456</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L457">
<a href="#L457">457</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L458">
<a href="#L458">458</a>
</th>
<td class="line-code">
<pre><span class="comment"># ----------------------------------------------------------------</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L459">
<a href="#L459">459</a>
</th>
<td class="line-code">
<pre><span class="comment"># Standalone test app</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L460">
<a href="#L460">460</a>
</th>
<td class="line-code">
<pre><span class="comment"># ----------------------------------------------------------------</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L461">
<a href="#L461">461</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L462">
<a href="#L462">462</a>
</th>
<td class="line-code">
<pre><span class="keyword">class</span> <span class="class">test_app_block</span> (stdgui2.std_top_block):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L463">
<a href="#L463">463</a>
</th>
<td class="line-code">
<pre>    <span class="keyword">def</span> <span class="function">__init__</span>(<span class="predefined-constant">self</span>, frame, panel, vbox, argv):
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L464">
<a href="#L464">464</a>
</th>
<td class="line-code">
<pre>        stdgui2.std_top_block.__init__ (<span class="predefined-constant">self</span>, frame, panel, vbox, argv)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L465">
<a href="#L465">465</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L466">
<a href="#L466">466</a>
</th>
<td class="line-code">
<pre>        fft_size = <span class="integer">256</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L467">
<a href="#L467">467</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L468">
<a href="#L468">468</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># build our flow graph</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L469">
<a href="#L469">469</a>
</th>
<td class="line-code">
<pre>        input_rate = <span class="float">20.48e3</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L470">
<a href="#L470">470</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L471">
<a href="#L471">471</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># Generate a complex sinusoid</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L472">
<a href="#L472">472</a>
</th>
<td class="line-code">
<pre>        <span class="comment">#src1 = gr.sig_source_c (input_rate, gr.GR_SIN_WAVE, 2e3, 1)</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L473">
<a href="#L473">473</a>
</th>
<td class="line-code">
<pre>        src1 = gr.sig_source_c (input_rate, gr.GR_CONST_WAVE, <span class="float">5.75e3</span>, <span class="integer">1</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L474">
<a href="#L474">474</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L475">
<a href="#L475">475</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># We add these throttle blocks so that this demo doesn't</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L476">
<a href="#L476">476</a>
</th>
<td class="line-code">
<pre>        <span class="comment"># suck down all the CPU available.  Normally you wouldn't use these.</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L477">
<a href="#L477">477</a>
</th>
<td class="line-code">
<pre>        thr1 = gr.throttle(gr.sizeof_gr_complex, input_rate)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L478">
<a href="#L478">478</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L479">
<a href="#L479">479</a>
</th>
<td class="line-code">
<pre>        sink1 = fft_sink_c (panel, title=<span class="string"><span class="delimiter">"</span><span class="content">Complex Data</span><span class="delimiter">"</span></span>, fft_size=fft_size,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L480">
<a href="#L480">480</a>
</th>
<td class="line-code">
<pre>                            sample_rate=input_rate, baseband_freq=<span class="float">100e3</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L481">
<a href="#L481">481</a>
</th>
<td class="line-code">
<pre>                            ref_level=<span class="integer">0</span>, y_per_div=<span class="integer">20</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L482">
<a href="#L482">482</a>
</th>
<td class="line-code">
<pre>        vbox.Add (sink1.win, <span class="integer">1</span>, wx.EXPAND)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L483">
<a href="#L483">483</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L484">
<a href="#L484">484</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.connect(src1, thr1, sink1)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L485">
<a href="#L485">485</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L486">
<a href="#L486">486</a>
</th>
<td class="line-code">
<pre>        <span class="comment">#src2 = gr.sig_source_f (input_rate, gr.GR_SIN_WAVE, 2e3, 1)</span>
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L487">
<a href="#L487">487</a>
</th>
<td class="line-code">
<pre>        src2 = gr.sig_source_f (input_rate, gr.GR_CONST_WAVE, <span class="float">5.75e3</span>, <span class="integer">1</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L488">
<a href="#L488">488</a>
</th>
<td class="line-code">
<pre>        thr2 = gr.throttle(gr.sizeof_float, input_rate)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L489">
<a href="#L489">489</a>
</th>
<td class="line-code">
<pre>        sink2 = fft_sink_f (panel, title=<span class="string"><span class="delimiter">"</span><span class="content">Real Data</span><span class="delimiter">"</span></span>, fft_size=fft_size*<span class="integer">2</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L490">
<a href="#L490">490</a>
</th>
<td class="line-code">
<pre>                            sample_rate=input_rate, baseband_freq=<span class="float">100e3</span>,
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L491">
<a href="#L491">491</a>
</th>
<td class="line-code">
<pre>                            ref_level=<span class="integer">0</span>, y_per_div=<span class="integer">20</span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L492">
<a href="#L492">492</a>
</th>
<td class="line-code">
<pre>        vbox.Add (sink2.win, <span class="integer">1</span>, wx.EXPAND)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L493">
<a href="#L493">493</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L494">
<a href="#L494">494</a>
</th>
<td class="line-code">
<pre>        <span class="predefined-constant">self</span>.connect(src2, thr2, sink2)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L495">
<a href="#L495">495</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L496">
<a href="#L496">496</a>
</th>
<td class="line-code">
<pre><span class="keyword">def</span> <span class="function">main</span> ():
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L497">
<a href="#L497">497</a>
</th>
<td class="line-code">
<pre>    app = stdgui2.stdapp (test_app_block, <span class="string"><span class="delimiter">"</span><span class="content">FFT Sink Test App</span><span class="delimiter">"</span></span>)
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L498">
<a href="#L498">498</a>
</th>
<td class="line-code">
<pre>    app.MainLoop ()
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L499">
<a href="#L499">499</a>
</th>
<td class="line-code">
<pre></pre>
</td>
</tr>
<tr>
<th class="line-num" id="L500">
<a href="#L500">500</a>
</th>
<td class="line-code">
<pre><span class="keyword">if</span> __name__ == <span class="string"><span class="delimiter">'</span><span class="content">__main__</span><span class="delimiter">'</span></span>:
</pre>
</td>
</tr>
<tr>
<th class="line-num" id="L501">
<a href="#L501">501</a>
</th>
<td class="line-code">
<pre>    main ()
</pre>
</td>
</tr>
</tbody>
</table>
</div>
<div style="clear:both;"></div>
</div>
</div>
</div>
<div id="ajax-indicator" style="display:none;"><span>Loading...</span></div>
<div id="ajax-modal" style="display:none;"></div>
<div id="footer">
<div class="bgl"><div class="bgr">
Powered by <a href="http://www.redmine.org/">Redmine</a> © 2006-2013 Jean-Philippe Lang
</div></div>
</div>
</div>
</div>


</body></html>